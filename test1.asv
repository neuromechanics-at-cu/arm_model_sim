addedmass=1
movedur=1
t=1
sim_input{addedmass,movedur,t}.added_mass  = 0;
sim_input{addedmass,movedur,t}.subj_mass   = 60; % in kg
sim_input{addedmass,movedur,t}.subj_height = 1.75; % in m
sim_input{addedmass,movedur,t}.movedur     = 1;
sim_input{addedmass,movedur,t}.normforce   = 200E4;
sim_input{addedmass,movedur,t}.start_pos   = [-.0758,0.4878]; % Starting location in m
sim_input{addedmass,movedur,t}.tar_rel_pos = [0.0707, 0.0707]; % Relative Target position in m

sim_input{addedmass,movedur,t}.added_mass = 20;
sim_input{addedmass,movedur,t}.movedur    = .5;

for t = 1:8

center = [-.0758,0.4878];

% Initialize some variables. 
vars.masses = sim_input.added_mass;
vars.rnjesus = 0;
vars.time_inc = 0.0050;
vars.speeds = sim_input.movedur; % Movement Duration
vars.norm_force = sim_input.normforce;
vars.minparam = 'drive2';

% Create the arm segments.
forearm.mass = 0.022*sim_input.subj_mass;%;+2*vars{c,subj,s,t}.masses(c);
forearm.length = (0.632-0.425)*sim_input.subj_height; % meters, taken from An iterative optimal control and estimation design for nonlinear stochastic system
forearm.l_com = 0.682*forearm.length;

forearm.l_com = (.417*(.632-.480)*sim_input.subj_height*.016*sim_input.subj_mass +...
        ((.632-.480)*sim_input.subj_height+.515*((.480-.370)/2)*sim_input.subj_height)*.006*sim_input.subj_mass)/...
        (.016*sim_input.subj_mass+.006*sim_input.subj_mass); % Using Enoka
    
[forearm] = calc_forearmI(forearm,vars.masses);

upperarm.length = (0.825-0.632)*sim_input.subj_height; % meters
upperarm.l_com = 0.436*upperarm.length;
upperarm.centl = 0.436*upperarm.length;
upperarm.mass = 0.028*sim_input.subj_mass; %kg
upperarm.Ic = .0141;

shoulder = [];
elbow = [];
theta = [];

% Define the target spots.
ro = sim_input.start_pos;
vars.target = sim_input.tar_rel_pos;
rf = [vars.target(1)+ro(1),...
    vars.target(2)+ro(2)];

switch t
   case 1
       sim_input{addedmass,movedur,t}.tar_rel_pos = [.0707 .0707];
       sim_input{addedmass,movedur,t}.start_pos = [-.0758,0.4878];
   case 2
       sim_input{addedmass,movedur,t}.tar_rel_pos = [-.0707 .0707];
       sim_input{addedmass,movedur,t}.start_pos = [-.0758,0.4878];
   case 3
       sim_input{addedmass,movedur,t}.tar_rel_pos = [-.0707 -.0707];
       sim_input{addedmass,movedur,t}.start_pos = [-.0758,0.4878];
   case 4
       sim_input{addedmass,movedur,t}.tar_rel_pos = [.0707 -.0707];
       sim_input{addedmass,movedur,t}.start_pos = [-.0758,0.4878];
   case 5
       sim_input{addedmass,movedur,t}.start_pos = [.0707 .0707]+center;
       sim_input{addedmass,movedur,t}.tar_rel_pos = [-.0707 -.0707];
   case 6
       sim_input{addedmass,movedur,t}.start_pos = [-.0707 .0707]+center;
       sim_input{addedmass,movedur,t}.tar_rel_pos = [.0707 -.0707];
   case 7
       sim_input{addedmass,movedur,t}.start_pos = [-.0707 -.0707]+center;
       sim_input{addedmass,movedur,t}.tar_rel_pos = [.0707 .0707];
   case 8
       sim_input{addedmass,movedur,t}.start_pos = [.0707 -.0707]+center;
       sim_input{addedmass,movedur,t}.tar_rel_pos = [-.0707 .0707];
end

test = single_sim(sim_input{addedmass,movedur,t});
figure(1);clf(1); hold on
plot(test.shoulder.torque)
plot(test.elbow.torque)


figure(7);clf(7);
for ii = 1:3:length(elbow{c,subj,s,t}.torque(:))
%     
% %     if sum(elbow{c,subj,s,t}.torque(ii:ii+20))==0 & sum(shoulder{c,subj,s,t}.torque(ii:ii+20))==0
% %         break        
% %     end
    figure(7);clf(7);hold on;
    axis([-.3 .3 -.1 .7]);
% %     maxforce = max([max(muscles{c,subj,s,t}.one.force(:)),max(muscles{c,subj,s,t}.two.force(:)),max(muscles{c,subj,s,t}.thr.force(:)),...
% %         max(muscles{c,subj,s,t}.fou.force(:)),max(muscles{c,subj,s,t}.fiv.force(:)),max(muscles{c,subj,s,t}.six.force(:))]);
%     
    viscircles(ro,vars{c,subj,s,t}.distances(d));
    plot(Data{c,subj,s,t}.startposition(1),Data{c,subj,s,t}.startposition(2)+.4,'*');
    plot(Data{c,subj,s,t}.targetposition(1),Data{c,subj,s,t}.targetposition(2),'x','Color','b');
    plot(Data{c,subj,s,t}.x(ii),Data{c,subj,s,t}.y(ii),'o');
    
    % Plot upperarm{c,subj,s,t}
    plot([0,cos(test.S(ii))*upperarm{c,subj,s,t}.length],[0,sin(test.S(ii))*upperarm{c,subj,s,t}.length],...
        'linewidth',3,'color','k');
    
    % Plot forearm{c,subj,s,t}
    plot([cos(test.S(ii))*upperarm{c,subj,s,t}.length,...
        cos(test.S(ii))*upperarm{c,subj,s,t}.length+cos(test.E(ii)+test.S(ii))*forearm{c,subj,s,t}.length],...
        [sin(test.S(ii))*upperarm{c,subj,s,t}.length,...
        sin(test.S(ii))*upperarm{c,subj,s,t}.length+sin(test.E(ii)+test.S(ii))*forearm{c,subj,s,t}.length],...
        'linewidth',3,'color','k');
    drawnow;
%     
%     % Plot a small eblow extender
%     plot([cos(test.S(ii))*upperarm{c,subj,s,t}.length,...
%         cos(test.S(ii))*upperarm{c,subj,s,t}.length+cos(test.S(ii)+test.E(ii)+pi)*abs(muscles{c,subj,s,t}.six.m_arm_e(ii))],...
%         [sin(test.S(ii))*upperarm{c,subj,s,t}.length,...
%         sin(test.S(ii))*upperarm{c,subj,s,t}.length+sin(test.S(ii)+test.E(ii)+pi)*abs(muscles{c,subj,s,t}.six.m_arm_e(ii))],...
%         'linewidth',3,'color','k');
%     
%     viscircles([cos(test.S(ii))*upperarm{c,subj,s,t}.length,...
%         sin(test.S(ii))*upperarm{c,subj,s,t}.length],muscles{c,subj,s,t}.one.m_arm(ii),...
%         'color','k');    
%     viscircles([0,0],muscles{c,subj,s,t}.thr.m_arm(ii),'color','k');
%     
%     % Plot muscle1
%     plot([cos(test.S(ii))*upperarm{c,subj,s,t}.length*.75,...
%         cos(test.S(ii))*upperarm{c,subj,s,t}.length+cos(test.E(ii)+test.S(ii))*muscles{c,subj,s,t}.one.m_arm(ii)],...
%         [sin(test.S(ii))*upperarm{c,subj,s,t}.length*.75,...
%         sin(test.S(ii))*upperarm{c,subj,s,t}.length+sin(test.E(ii)+test.S(ii))*muscles{c,subj,s,t}.one.m_arm(ii)],...
%         'linewidth',3,'color',[act{c,subj,s,t}.one(ii),0,(1-act{c,subj,s,t}.one(ii))]);
%     
%     % Plot Muscle 2
%     plot([cos(test.S(ii))*upperarm{c,subj,s,t}.length*.75,...
%         cos(test.S(ii))*upperarm{c,subj,s,t}.length+cos(test.E(ii)+test.S(ii)+pi)*abs(muscles{c,subj,s,t}.two.m_arm(ii))],...
%         [sin(test.S(ii))*upperarm{c,subj,s,t}.length*.75,...
%         sin(test.S(ii))*upperarm{c,subj,s,t}.length+sin(test.E(ii)+test.S(ii)+pi)*abs(muscles{c,subj,s,t}.two.m_arm(ii))],...
%         'linewidth',3,'color',[act{c,subj,s,t}.two(ii),0,(1-act{c,subj,s,t}.two(ii))]);
%     
%     % Plot Muscle 3
%     plot([cos(test.S(ii)+pi/2)*muscles{c,subj,s,t}.thr.m_arm(ii),...
%         cos(test.S(ii))*upperarm{c,subj,s,t}.length*.25],...
%         [sin(test.S(ii)+pi/2)*muscles{c,subj,s,t}.thr.m_arm(ii),...
%         sin(test.S(ii))*upperarm{c,subj,s,t}.length*.25],...
%         'linewidth',3,'color',[act{c,subj,s,t}.thr(ii),0,(1-act{c,subj,s,t}.thr(ii))]);
%     
%     % Plot Muscle 4
%     plot([cos(test.S(ii)-pi/2)*muscles{c,subj,s,t}.thr.m_arm(ii),...
%         cos(test.S(ii))*upperarm{c,subj,s,t}.length*.25],...
%         [sin(test.S(ii)-pi/2)*muscles{c,subj,s,t}.thr.m_arm(ii),...
%         sin(test.S(ii))*upperarm{c,subj,s,t}.length*.25],...
%         'linewidth',3,'color',[act{c,subj,s,t}.fou(ii),0,(1-act{c,subj,s,t}.fou(ii))]);
%     
%     % Plot Muscle 5
%     plot([cos(test.S(ii)+pi/2)*muscles{c,subj,s,t}.thr.m_arm(ii),...
%         cos(test.S(ii))*upperarm{c,subj,s,t}.length+cos(test.E(ii)+test.S(ii))*muscles{c,subj,s,t}.fiv.m_arm_s(ii)],...
%         [sin(test.S(ii)+pi/2)*muscles{c,subj,s,t}.thr.m_arm(ii),...
%         sin(test.S(ii))*upperarm{c,subj,s,t}.length+sin(test.E(ii)+test.S(ii))*muscles{c,subj,s,t}.fiv.m_arm_e(ii)],...
%         'linewidth',3,'color',[act{c,subj,s,t}.fiv(ii),0,(1-act{c,subj,s,t}.fiv(ii))]);
%     
%     % Plot Muscle 6
%     plot([cos(test.S(ii)-pi/2)*muscles{c,subj,s,t}.thr.m_arm(ii),...
%         cos(test.S(ii))*upperarm{c,subj,s,t}.length+cos(test.E(ii)+test.S(ii)+pi)*muscles{c,subj,s,t}.fiv.m_arm_s(ii)],...
%         [sin(test.S(ii)-pi/2)*muscles{c,subj,s,t}.thr.m_arm(ii),...
%         sin(test.S(ii))*upperarm{c,subj,s,t}.length+sin(test.E(ii)+test.S(ii)+pi)*muscles{c,subj,s,t}.fiv.m_arm_e(ii)],...
%         'linewidth',3,'color',[act{c,subj,s,t}.six(ii),0,(1-act{c,subj,s,t}.six(ii))]);
%     
%     drawnow;
    
%     figure(6);clf(6);hold on
%     plot(muscles{c,subj,s,t}.one.force(1:ii),'linewidth',3)
%     plot(muscles{c,subj,s,t}.two.force(1:ii),'linewidth',3)
%     plot(muscles{c,subj,s,t}.thr.force(1:ii),'linewidth',3)
%     plot(muscles{c,subj,s,t}.fou.force(1:ii),'linewidth',3)
%     plot(muscles{c,subj,s,t}.fiv.force(1:ii),'linewidth',3)
%     plot(muscles{c,subj,s,t}.six.force(1:ii),'linewidth',3)
%     legend({'one','two','thr','fou','fiv','six'})
%     drawnow;
    
 end
            end
        end
    end
end



end